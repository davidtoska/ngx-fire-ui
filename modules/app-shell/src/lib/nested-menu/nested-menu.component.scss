$color-grey-primary: #fafafa;
$color-text-grey: rgba(0, 0, 0, 0.54);
$color-text-dark: rgba(0, 0, 0, 0.87);
$color-text-accent: #1a73e8;

mat-card {
  padding: 0;

  &.handset {
    .level:not(:last-of-type) {
      width: 50%;
    }
    .level:last-of-type {
      display: none;
    }
  }
}

.breadcrumbs,
.name {
  background-color: $color-grey-primary;
  color: $color-text-grey;
  align-items: center;
  display: flex;
}

.breadcrumbs {
  padding: 16px;
  box-shadow: -1px -1px 0 rgba(0, 0, 0, 0.12) inset,
    0px -1px 2px rgba(0, 0, 0, 0.05);
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;

  button {
    height: 24px;
    width: 24px;
    line-height: 24px;
  }

  mat-icon:not(:first-of-type) {
    font-size: 20px;
    height: 20px;
    width: 20px;
    margin: 0 6px;
  }

  p {
    margin: 0 0 -1px;
    &:hover {
      cursor: pointer;
      color: $color-text-accent;
      text-decoration: underline;
      text-decoration-color: $color-text-accent;
    }
  }
}

.levels {
  display: flex;
}

.level {
  display: flex;
  flex-direction: column;
  min-height: 600px;
  max-height: 600px;
  overflow-y: auto;
  box-shadow: -1px 0 0 rgba(0, 0, 0, 0.12) inset;

  .name {
    padding: 0 16px;
    // height: 44px;
    min-height: 44px;
    box-shadow: -1px -1px 0 rgba(0, 0, 0, 0.12) inset;

    p {
      margin: 1px 0 0 8px;
    }
  }
  .header-button {
    color: $color-text-accent;
    letter-spacing: 0.25px;
    text-align: left;
    padding-top: 4px;
    padding-bottom: 4px;
    border-radius: 0;
  }
  mat-list {
    padding: 0;

    .array-parent p {
      padding-left: 0;
    }
    .array-sub-parent {
      .open-icon {
        padding-left: 28px;
      }
      p {
        padding-left: 5px;
        background-color: rgba(0, 0, 0, 0.08);
        height: 20px;
        line-height: 20px;
        min-width: 16px;
        font-family: 'Roboto Mono', monospace;
      }
    }
    .array-child p {
      padding-left: 56px;
    }
  }

  mat-list-item {
    height: 32px;
    color: $color-text-grey;
    cursor: pointer;
    p {
      padding-left: 28px;
      margin: 0;
    }
    &:hover {
      background-color: rgba(0, 0, 0, 0.08);
    }
  }

  &::-webkit-scrollbar {
    background-color: #fff;
    width: 4px;
    background-clip: padding-box;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    border: 2px solid rgba(0, 0, 0, 0.1);
    background-clip: padding-box;
  }
}

.level:not(:last-of-type) {
  width: 22%;
  mat-list mat-list-item {
    mat-icon {
      position: absolute;
      top: 4px;
      right: 4px;
      opacity: 0;
      transition: opacity ease-in 0.2s;
    }
    &.selected {
      mat-icon {
        opacity: 1;
      }
    }
    &:hover,
    &.selected {
      background-color: rgba(0, 0, 0, 0.08);
      color: $color-text-dark;
    }
  }
}

.level:last-of-type {
  flex-grow: 1;

  .name {
    margin-bottom: 12px;
  }
  .delete-icon {
    opacity: 0;
  }
  mat-list-item:hover {
    background-color: #f5f5f5;

    .delete-icon {
      opacity: 1;
    }
  }
}
.add-button {
  margin-left: 22px;
  color: $color-text-accent;
}

// Utility classes

.divider {
  box-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12) inset;
}
.spacer {
  flex-grow: 1;
}

::ng-deep {
  .no-hover-effect.mat-button.mat-primary .mat-button-focus-overlay,
  .no-hover-effect.mat-button.mat-accent .mat-button-focus-overlay,
  .no-hover-effect.mat-button.mat-warn .mat-button-focus-overlay {
    background-color: transparent;
  }
}
